{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_python\\\\frontend\\\\src\\\\components\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTickets } from '../api';\nimport TicketCard from './TicketCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const statuses = ['Pending', 'Accepted', 'Resolved', 'Rejected'];\n  useEffect(() => {\n    getTickets().then(response => setTickets(response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: statuses.map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), tickets.filter(ticket => ticket.status === status).map(ticket => /*#__PURE__*/_jsxDEV(TicketCard, {\n        ticket: ticket\n      }, ticket.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }, this))]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(KanbanBoard, \"54iZ51D3gm8y2vmomMR+587W7ik=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","getTickets","TicketCard","jsxDEV","_jsxDEV","KanbanBoard","_s","tickets","setTickets","statuses","then","response","data","className","children","map","status","fileName","_jsxFileName","lineNumber","columnNumber","filter","ticket","id","_c","$RefreshReg$"],"sources":["D:/test_python/frontend/src/components/KanbanBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTickets } from '../api';\r\nimport TicketCard from './TicketCard';\r\n\r\nconst KanbanBoard = () => {\r\n    const [tickets, setTickets] = useState([]);\r\n    const statuses = ['Pending', 'Accepted', 'Resolved', 'Rejected'];\r\n\r\n    useEffect(() => {\r\n        getTickets().then((response) => setTickets(response.data));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"kanban-board\">\r\n            {statuses.map((status) => (\r\n                <div key={status} className=\"kanban-column\">\r\n                    <h2>{status}</h2>\r\n                    {tickets\r\n                        .filter((ticket) => ticket.status === status)\r\n                        .map((ticket) => (\r\n                            <TicketCard key={ticket.id} ticket={ticket} />\r\n                        ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMS,QAAQ,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;EAEhEV,SAAS,CAAC,MAAM;IACZE,UAAU,CAAC,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAKH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC9D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAKS,SAAS,EAAC,cAAc;IAAAC,QAAA,EACxBL,QAAQ,CAACM,GAAG,CAAEC,MAAM,iBACjBZ,OAAA;MAAkBS,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACvCV,OAAA;QAAAU,QAAA,EAAKE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAChBb,OAAO,CACHc,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACN,MAAM,KAAKA,MAAM,CAAC,CAC5CD,GAAG,CAAEO,MAAM,iBACRlB,OAAA,CAACF,UAAU;QAAiBoB,MAAM,EAAEA;MAAO,GAA1BA,MAAM,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAChD,CAAC;IAAA,GANAJ,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACd,EAAA,CAtBID,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}